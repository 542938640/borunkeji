<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- @Automatically generate by Coder in 2019-08-16 15:33 -->
<mapper namespace="com.taro.dao.sec.SecUserRoleRelDao">
  <resultMap id="BaseResultMap" type="com.taro.entity.sec.SecUserRoleRelEntity">
  	<id column="f_pid" property="id" jdbcType="VARCHAR" />
  	<result column="f_pid" property="id" jdbcType="VARCHAR" />
  	<result column="f_user_pid" property="user_pid" jdbcType="VARCHAR" />
  	<result column="f_role_pid" property="role_pid" jdbcType="VARCHAR" />
  	<result column="f_sys_flag" property="sysFlag" jdbcType="VARCHAR" />
  	<result column="f_remark" property="remark" jdbcType="VARCHAR" />
  	<result column="f_last_modifier" property="lastModifier" jdbcType="VARCHAR" />
  	<result column="f_last_modified_time" property="lastModifiedTime" jdbcType="VARCHAR" />
  	<result column="f_creator" property="creator" jdbcType="VARCHAR" />
  	<result column="f_create_time" property="createTime" jdbcType="VARCHAR" />
  	
  	<result column="f_user_name" property="user_name" jdbcType="VARCHAR" />
  	<result column="f_role_name" property="role_name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
  	t.f_pid, t.f_user_pid, t.f_role_pid, 
	t.f_sys_flag, t.f_remark, t.f_last_modifier, t.f_last_modified_time, t.f_creator, t.f_create_time
  </sql>
  
  <sql id="where_sql">
	<if test="not_id != null and not_id != ''" > and t.f_pid != #{not_id,jdbcType=VARCHAR}</if>
	<if test="id != null and id != ''" > and t.f_pid = #{id,jdbcType=VARCHAR}</if>
	<if test="user_pid != null and user_pid != ''" > and t.f_user_pid =#{user_pid,jdbcType=VARCHAR}</if>
	<if test="role_pid != null and role_pid != ''" > and t.f_role_pid =#{role_pid,jdbcType=VARCHAR}</if>
	<if test="sysFlag != null and sysFlag != ''" > and t.f_sys_flag = #{sysFlag,jdbcType=VARCHAR}</if>
	<if test="remark != null and remark != ''" > and t.f_remark = #{remark,jdbcType=VARCHAR}</if>
	<if test="lastModifier != null and lastModifier != ''" > and t.f_last_modifier = #{lastModifier,jdbcType=VARCHAR}</if>
	<if test="lastModifiedTime != null and lastModifiedTime != ''" > and t.f_last_modified_time = #{lastModifiedTime,jdbcType=VARCHAR}</if>
	<if test="creator != null and creator != ''" > and t.f_creator = #{creator,jdbcType=VARCHAR}</if>
	<if test="createTime != null and createTime != ''" > and t.f_create_time = #{createTime,jdbcType=VARCHAR}</if>
  </sql>
  
  <insert id="insert" parameterType="com.taro.entity.sec.SecUserRoleRelEntity" >
    insert into t_sec_user_role_rel (
  	f_pid, f_user_pid, f_role_pid, 
  f_sys_flag, f_remark, f_last_modifier,
  f_last_modified_time, f_creator, f_create_time
    ) values (
      #{id,jdbcType=VARCHAR}, #{user_pid,jdbcType=VARCHAR}, #{role_pid,jdbcType=VARCHAR}, 
  #{sysFlag,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{lastModifier,jdbcType=VARCHAR},
  #{lastModifiedTime,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR} 
    )
  </insert>
  
  <insert id="insertObjects" parameterType="list">
		insert into t_sec_user_role_rel (
  	f_pid, f_user_pid, f_role_pid, 
  f_sys_flag, f_remark, f_last_modifier,
  f_last_modified_time, f_creator, f_create_time
		)
		<foreach collection="list" item="entity" index="index" separator="union all">
			select
      #{entity.id,jdbcType=VARCHAR}, #{entity.user_pid,jdbcType=VARCHAR}, #{entity.role_pid,jdbcType=VARCHAR}, 
  #{entity.sysFlag,jdbcType=VARCHAR}, #{entity.remark,jdbcType=VARCHAR}, #{entity.lastModifier,jdbcType=VARCHAR},
  #{entity.lastModifiedTime,jdbcType=VARCHAR}, #{entity.creator,jdbcType=VARCHAR}, #{entity.createTime,jdbcType=VARCHAR} 
			from dual
		</foreach>
  </insert>
  
  <update id="update" parameterType="com.taro.entity.sec.SecUserRoleRelEntity">
    update t_sec_user_role_rel 
    <set>
      <if test="id != null" > f_pid = #{id,jdbcType=VARCHAR}, </if>
      <if test="user_pid != null" > f_user_pid = #{user_pid,jdbcType=VARCHAR}, </if>
      <if test="role_pid != null" > f_role_pid = #{role_pid,jdbcType=VARCHAR}, </if>
      <if test="sysFlag != null" > f_sys_flag = #{sysFlag,jdbcType=VARCHAR}, </if>
      <if test="remark != null" > f_remark = #{remark,jdbcType=VARCHAR}, </if>
      <if test="lastModifier != null" > f_last_modifier = #{lastModifier,jdbcType=VARCHAR}, </if>
      <if test="lastModifiedTime != null" > f_last_modified_time = #{lastModifiedTime,jdbcType=VARCHAR}, </if>
      <if test="creator != null" > f_creator = #{creator,jdbcType=VARCHAR}, </if>
      <if test="createTime != null" > f_create_time = #{createTime,jdbcType=VARCHAR}, </if>
    </set>
    where f_pid = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="batchUpdate" parameterType="java.util.List">
		<foreach collection="list" item="entity" separator=";">
			update t_sec_user_role_rel
			<set>
		      <if test="id != null" > f_pid = #{entity.id,jdbcType=VARCHAR}, </if>
    		  <if test="user_pid != null" > f_user_pid = #{entity.user_pid,jdbcType=VARCHAR}, </if>
      		  <if test="role_pid != null" > f_role_pid = #{entity.role_pid,jdbcType=VARCHAR}, </if>
		      <if test="sysFlag != null" > f_sys_flag = #{entity.sysFlag,jdbcType=VARCHAR}, </if>
		      <if test="remark != null" > f_remark = #{entity.remark,jdbcType=VARCHAR}, </if>
		      <if test="lastModifier != null" > f_last_modifier = #{entity.lastModifier,jdbcType=VARCHAR}, </if>
		      <if test="lastModifiedTime != null" > f_last_modified_time = #{entity.lastModifiedTime,jdbcType=VARCHAR}, </if>
		      <if test="creator != null" > f_creator = #{entity.creator,jdbcType=VARCHAR}, </if>
		      <if test="createTime != null" > f_create_time = #{entity.createTime,jdbcType=VARCHAR}, </if>
			</set>
			where f_pid = #{id,jdbcType=VARCHAR}
		</foreach>
  </update>
  
  
  <update id="delete" parameterType="java.lang.String" >
    update t_sec_user_role_rel set
		F_SYS_FLAG='0',
	    F_LAST_MODIFIER = #{lastModifier,jdbcType=VARCHAR},
		F_LAST_MODIFIED_TIME = #{lastModifiedTime,jdbcType=VARCHAR} 
	where f_pid = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="deleteAll" parameterType="map">
	update t_sec_user_role_rel set 
		F_SYS_FLAG='0',
	    F_LAST_MODIFIER = #{lastModifier,jdbcType=VARCHAR},
		F_LAST_MODIFIED_TIME = #{lastModifiedTime,jdbcType=VARCHAR} 
	where f_pid in
	<foreach item="item" collection="ids" open="(" separator="," close=")">
        #{item}
    </foreach>
  </update>
  
  <!-- 查询条件 模糊查询用concat函数 ：name like concat(concat('%',#{bean.name,jdbcType=VARCHAR}),'%')，
  	         这样做主要是为了支持mysql和oracle以及防止sql注入 -->
  <select id="list" resultMap="BaseResultMap" parameterType="map">
    select t.*,
	u.f_nickname as f_user_name,
	r.f_name as f_role_name
    from t_sec_user_role_rel t
	left join t_sec_user u on t.f_user_pid = u.f_pid and u.f_sys_flag = '1'
	left join t_sec_role r on t.f_role_pid = r.f_pid and r.f_sys_flag = '1'
    where 1 = 1
	<if test="not_id != null and not_id != ''" > and t.f_pid != #{not_id,jdbcType=VARCHAR}</if>
	<if test="id != null and id != ''" > and t.f_pid = #{id,jdbcType=VARCHAR}</if>
	<if test="user_pid != null and user_pid != ''" > and t.f_user_pid =#{user_pid,jdbcType=VARCHAR}</if>
	<if test="role_pid != null and role_pid != ''" > and t.f_role_pid =#{role_pid,jdbcType=VARCHAR}</if>
	<if test="sysFlag != null and sysFlag != ''" > and t.f_sys_flag = #{sysFlag,jdbcType=VARCHAR}</if>
	<if test="remark != null and remark != ''" > and t.f_remark = #{remark,jdbcType=VARCHAR}</if>
	<if test="lastModifier != null and lastModifier != ''" > and t.f_last_modifier = #{lastModifier,jdbcType=VARCHAR}</if>
	<if test="lastModifiedTime != null and lastModifiedTime != ''" > and t.f_last_modified_time = #{lastModifiedTime,jdbcType=VARCHAR}</if>
	<if test="creator != null and creator != ''" > and t.f_creator = #{creator,jdbcType=VARCHAR}</if>
	<if test="createTime != null and createTime != ''" > and t.f_create_time = #{createTime,jdbcType=VARCHAR}</if>
	<if test="user_name != null and user_name != ''" > 
		and u.f_nickname like concat(concat('%',#{user_name,jdbcType=VARCHAR}),'%')
	</if>
	<if test="role_name != null and role_name != ''" > 
		and r.f_name like concat(concat('%',#{role_name,jdbcType=VARCHAR}),'%')
	</if>
  </select>
  
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_sec_user_role_rel t
    where t.f_pid = #{id,jdbcType=VARCHAR}
  </select>
  
  	<!-- 删除角色下的用户关系 -->  
	<delete id="deleteRoleRel" parameterType="com.taro.entity.sec.SecUserRoleRelEntity">  
        DELETE FROM t_sec_user_role_rel WHERE f_role_pid = #{role_pid}  
	</delete> 
</mapper>