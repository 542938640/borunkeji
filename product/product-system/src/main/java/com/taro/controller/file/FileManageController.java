package com.taro.controller.file;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.multipart.MultipartFile;import com.taro.common.DataSet;import com.taro.common.DataSetObject;import com.taro.common.Message;import com.taro.constants.Constant;import com.taro.controller.AbstractController;import com.taro.entity.file.FileManageEntity;import com.taro.service.file.FileManageService;import io.swagger.annotations.Api;import io.swagger.annotations.ApiImplicitParam;import io.swagger.annotations.ApiImplicitParams;import io.swagger.annotations.ApiOperation;/** *<p>Title:FileManageController.java</p> *<p>Description:文件管理 Action</p> *@author 张宇唯 *@version 1.0 *@Automatically generate by Coder in 2019-07-31 10:57 */@Api(tags = "文件管理")@RestController@RequestMapping(value="/fileManage")public class FileManageController extends AbstractController<FileManageEntity>{	public final static String MODULE = "文件管理";	public final static String ENTITY = "FileManageEntity";		@Autowired	private FileManageService fileManageService;		@Override    protected FileManageService getService () {        return fileManageService;    }		@Override    public String getModule() {		return MODULE;	}	@RequestMapping(value = "/viewImage", method = RequestMethod.GET, produces = Constant.JSON_UTF_8)	public void viewImage(HttpServletResponse response, @RequestParam String id){		getService().viewImage(response, id);	}	@ApiOperation(value = "下载文件", notes = "下载文件")	@RequestMapping(value = "/download", produces = Constant.JSON_UTF_8, method = RequestMethod.GET)	public void downloadFileById(HttpServletResponse response, @RequestParam Map<String, Object> param) {		getService().download(response, param);	}		@ApiOperation(value = "查询文件列表", notes = "查询文件列表")	@ApiImplicitParams({		@ApiImplicitParam (name = "parameter", value = "查询条件参数", required = true, dataType = "Map<String, Object>", paramType = "query")	})	@RequestMapping(value = "/queryFile",produces = Constant.JSON_UTF_8,method = RequestMethod.GET)	public String queryFile(@RequestParam Map<String, Object> parameter){		listBefore(parameter);		List<FileManageEntity> result = getService().queryFile(parameter);		return new DataSet<FileManageEntity>(result).toJson();	}		/**	 * 上传文件	 * 1、支持多文件上传	 * 2、返回json字符串	 * 3、上传文件最大上传数据9	 * 4、最大文件不可超过500MB	 * @param files	 * @return	 */    @RequestMapping(value="/uploadFile",method=RequestMethod.POST,produces ="application/json; charset=UTF-8")	public String upload(@RequestParam("uploadfile") MultipartFile[] files, FileManageEntity fileParam) {    	return getService().uploadFile(files,fileParam);	}	@ApiOperation(value = "根据实例ids删除多个实例", notes = "根据实例ids删除多个实例")	@ApiImplicitParam(name = "ids", value = "实例ids", required = true, dataType = "String", paramType = "query")	@RequestMapping(value = "/deleteFile",method = RequestMethod.GET, produces = Constant.JSON_UTF_8)	public String deleteAll(@RequestParam String ids) {		int deleteRowCount = getService().deleteFile(ids);		return new Message(deleteRowCount>0?Constant.STATUS_OK:Constant.STATUS_ERROR_GENERAL,"删除"+deleteRowCount+"条记录").toJson();	}	@ApiOperation(value = "根据实例ids删除多个实例", notes = "根据实例ids删除多个实例")	@ApiImplicitParam(name = "ids", value = "实例ids", required = true, dataType = "String", paramType = "query")	@RequestMapping(value = "/deleteFileByBusiKey",method = RequestMethod.GET, produces = Constant.JSON_UTF_8)	public String deleteFileByBusiKey(@RequestParam String id) {		int deleteRowCount = getService().deleteFileByBusiKey(id);		return new Message(deleteRowCount>0?Constant.STATUS_OK:Constant.STATUS_ERROR_GENERAL,"删除"+deleteRowCount+"条记录").toJson();	}	@ApiOperation(value = "根据实例id复制文件", notes = "根据实例id复制文件")	@ApiImplicitParam(name = "ids", value = "实例ids", required = true, dataType = "String", paramType = "query")	@RequestMapping(value = "/copyFileByBusiKey",method = RequestMethod.GET, produces = Constant.JSON_UTF_8)	public String copyFileByBusiKey(@RequestParam Map<String, Object> parameter) {		FileManageEntity model = getService().copyFileByBusiKey(parameter);		return new DataSetObject<FileManageEntity>(model).toJson(ignoreAttr.get(Constant.IGNORE_ATTR_GET));	}	}