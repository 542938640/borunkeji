package com.taro.controller.sec;import java.util.List;import java.util.Map;import java.util.Set;import javax.validation.ConstraintViolation;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import com.taro.common.DataSet;import com.taro.common.DataSetObject;import com.taro.constants.Constant;import com.taro.controller.AbstractController;import com.taro.entity.sec.SecTenantsLevelRoleEntity;import com.taro.exception.BusinessException;import com.taro.service.sec.SecTenantsLevelRoleService;import io.swagger.annotations.Api;import io.swagger.annotations.ApiImplicitParam;import io.swagger.annotations.ApiImplicitParams;import io.swagger.annotations.ApiOperation;/** *<p>Title:SecTenantsLevelRoleController.java</p> *<p>Description: Action</p> *@author 张宇唯 *@version 1.0 *@Automatically generate by Coder in 2020-12-23 11:56:21 */@Api(tags = "")@RestController@RequestMapping(value="/secTenantsLevelRole")public class SecTenantsLevelRoleController extends AbstractController<SecTenantsLevelRoleEntity> {	public final static String MODULE = "";	public final static String ENTITY = "SecTenantsLevelRoleEntity";		@Autowired	private SecTenantsLevelRoleService secTenantsLevelRoleService;		@Override    protected SecTenantsLevelRoleService getService () {        return secTenantsLevelRoleService;    }    	@Override    public String getModule() {		return MODULE;	}	@ApiOperation(value = "获取机构树信息", notes = "获取机构树信息")	@ApiImplicitParams({		@ApiImplicitParam (name = "parameter", value = "查询条件参数", required = true, dataType = "Map<String, Object>", paramType = "query")	})	@RequestMapping(value = "/listTree",produces = Constant.JSON_UTF_8,method = RequestMethod.GET)	public String listTree(@RequestParam Map<String, Object> parameter){		listBefore(parameter);		List<SecTenantsLevelRoleEntity> result = getService().listTree(parameter);		return new DataSet<SecTenantsLevelRoleEntity>(result).toJson();	}	@ApiOperation(value = "获取公共角色信息", notes = "获取公共角色树信息")	@ApiImplicitParams({		@ApiImplicitParam (name = "parameter", value = "查询条件参数", required = true, dataType = "Map<String, Object>", paramType = "query")	})	@RequestMapping(value = "/listRole",produces = Constant.JSON_UTF_8,method = RequestMethod.GET)	public String listRole(@RequestParam Map<String, Object> parameter){		listBefore(parameter);		List<SecTenantsLevelRoleEntity> result = getService().listRole(parameter);		return new DataSet<SecTenantsLevelRoleEntity>(result).toJson();	}		@ApiOperation(value = "保存" + MODULE, notes = "保存" + MODULE)	@ApiImplicitParams({		@ApiImplicitParam (name = "model", value = "保存实体", required = true, dataType = ENTITY, paramType = "query")	})	@RequestMapping(value = "/saveSecTenantsLevelRole",consumes = Constant.JSON_UTF_8,method = RequestMethod.POST)	public String saveSecTenantsLevelRole(@RequestBody SecTenantsLevelRoleEntity model) {				Set<ConstraintViolation<SecTenantsLevelRoleEntity>> constraintViolations = validator.validate(model);		if (!constraintViolations.isEmpty()) {			throw new BusinessException(constraintViolations.iterator().next().getMessage());		}		createBefore(model);		getService().saveSecTenantsLevelRole(model);		return new DataSetObject<SecTenantsLevelRoleEntity>(model).toJson(ignoreAttr.get(Constant.IGNORE_ATTR_CREATE));	}	}