package com.taro.service.activiti;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletResponse;import org.activiti.engine.task.Task;import com.taro.entity.ProcessDataEntity;public interface ActivityService {	/**	 * <p>描述: 根据flow_key查询流程环节</p>  	 * @author 张宇唯  	 * @param flow_key 流程key	 * @date 2018-12-27	 */	public String queryTaskDef(String flow_key);	/**	 * <p>描述: 根据flow_key查询审核环节</p>  	 * @author 张宇唯  	 * @param flow_key 流程key	 * @date 2018-12-27	 */	public String queryCheckTaskDef(String flow_key);	/**	 * <p>描述: 根据业务id查询历史信息</p>  	 * @author 张宇唯  	 * @param busi_key 业务id	 * @date 2018-12-27	 */	public String findHistoryByBusiKey(String busi_key);	/**	 * <p>描述: 根据业务id查看流程图</p>  	 * @author 张宇唯  	 * @param businessKey 业务id	 * @date 2018-12-27	 */	public String getInstanceImageByBusiKey(HttpServletResponse response,String businessKey);	/**	 * <p>描述: 查询待办任务列表</p>  	 * @author 张宇唯  	 * @param userId 用户id	 * @date 2019-03-14	 */	public String[] queryBusiIdByTodoList(String flow_key,String userId,String task_def);	/**	 * <p>描述: 查询已办任务列表</p>  	 * @author 张宇唯  	 * @param userId 用户id	 * @date 2019-03-14	 */	public String[] queryBusiIdByDoneList(String flow_key,String userId,String task_def);	/**	 * <p>描述: 根据用户id查询待办任务列表</p>  	 * @author 张宇唯  	 * @param userId 用户id	 * @date 2018-12-27	 */	public String findTodoListByUserId(String flow_key,String userId,int pageNum,int pageSize);	/**	 * <p>描述: 根据用户id查询已办任务列表</p>  	 * @author 张宇唯  	 * @param userId 用户id	 * @date 2018-12-27	 */	public String findDoneListByUserId(String flow_key,String userId,int pageNum,int pageSize);	/**	 * <p>描述: 启动流程</p>	 * @author 张宇唯  	 * @param flow_key 流程id	 * @param businessKey 业务id	 * @date 2018-12-27	 *///	public String start(String flow_key,String businessKey,Map<String, Object> variable);	public ProcessDataEntity start(String businessKey,String flow_key,Map<String, Object> variable);	/**	 * <p>描述: 启动流程并走下一步</p>	 * @author 张宇唯  	 * @param processDefinitionKey 流程图id	 * @param businessKey 业务id	 * @date 2018-12-27	 */	public ProcessDataEntity startAndComplete(String businessKey,String flow_key,String assignee,Map<String, Object> variable);	/**	 * 	 * <p>描述: 根据用户id查询待办任务列表</p>  	 * @author 张宇唯  	 * @param processDefinitionKey 流程图id	 * @param userId 用户id	 * @date 2018-12-27	 */	public List<Task> findTasksByUserId(String userId,String processDefinitionKey);	/**	 * 	 * <p>描述: 完成任务</p>  	 * @author 张宇唯  	 * @param taskId 任务id	 * @param userId 用户id	 * @date 2018-12-27	 */	public Map completeTask(String taskId,String assignee,Map<String, Object> variable);	/**	 * 	 * <p>描述: 完成任务</p>  	 * @author 张宇唯  	 * @param taskId 任务id	 * @param userId 用户id	 * @date 2018-12-27	 *///	public String completeTaskByBusiKey(String businessKey,String flow_key,String assignee,Map<String, Object> variable);	public ProcessDataEntity completeTaskByBusiKey(String businessKey,String flow_key,String assignee,Map<String, Object> variable);//	/**//	 * 更改业务流程状态#{ActivityDemoServiceImpl.updateBizStatus(execution,"tj")}//	 * @param execution//	 * @param status//	 *///	public void updateBizStatus(DelegateExecution execution,String status);//	//	//流程节点权限用户列表${ActivityDemoServiceImpl.findUsers(execution,sign)}//	public List<String> findUsersForSL(DelegateExecution execution);//	//	//流程节点权限用户列表${ActivityDemoServiceImpl.findUsers(execution,sign)}//	public List<String> findUsersForSP(DelegateExecution execution);//	/**//	 * //	* <p>描述:  生成流程图//	 * 首先启动流程，获取processInstanceId，替换即可生成</p>  //	* @author 范相如  //	* @date 2018年2月25日  //	* @param processInstanceId//	* @throws Exception//	 *///	public void queryProImg(String processInstanceId) throws Exception;//	//	/**//	 * 流程图高亮显示//	 * 首先启动流程，获取processInstanceId，替换即可生成//	 * @throws Exception//	 *///    public void queryProHighLighted(String processInstanceId) throws Exception;//    /**  //     * 获取需要高亮的线  //     * @param processDefinitionEntity  //     * @param historicActivityInstances  //     * @return  //     */  //    List<String> getHighLightedFlows(ProcessDefinitionEntity processDefinitionEntity,List<HistoricActivityInstance> historicActivityInstances);}