<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- @Automatically generate by Coder in 2020-10-16 10:16:01 -->
<mapper namespace="com.taro.dao.notice.NoticeDao">

  	<resultMap id="BaseResultMap" type="com.taro.entity.notice.NoticeEntity">
	  	<id column="F_PID" property="id" jdbcType="VARCHAR" />
  		<result column="F_PID" property="id" jdbcType="VARCHAR" />
  		<result column="F_TITLE" property="title" jdbcType="VARCHAR" />
  		<result column="F_CONTENT" property="content" typeHandler="com.taro.utils.MyBlobTypeHandler" />
  		<result column="F_IS_PUBLISH" property="is_publish" jdbcType="CHAR" />
  		<result column="F_PUBLISH_USER_PID" property="publish_user_pid" jdbcType="VARCHAR" />
  		<result column="F_PUBLISH_TIME" property="publish_time" jdbcType="VARCHAR" />
	  	<result column="F_SYS_FLAG" property="sysFlag" jdbcType="VARCHAR" />
	  	<result column="F_REMARK" property="remark" jdbcType="VARCHAR" />
	  	<result column="F_LAST_MODIFIER" property="lastModifier" jdbcType="VARCHAR" />
	  	<result column="F_LAST_MODIFIED_TIME" property="lastModifiedTime" jdbcType="VARCHAR" />
	  	<result column="F_CREATOR" property="creator" jdbcType="VARCHAR" />
	  	<result column="F_CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
	  	
	  	<result column="F_PUBLISH_USER_PID" property="publish_user_name" jdbcType="VARCHAR" />
  	</resultMap>

  	<sql id="Base_Column_List" >
		t.F_PID, T.F_TITLE, T.F_CONTENT, T.F_IS_PUBLISH, T.F_PUBLISH_USER_PID, T.F_PUBLISH_TIME, 
		t.F_SYS_FLAG, t.F_REMARK, t.F_LAST_MODIFIER, t.F_LAST_MODIFIED_TIME, t.F_CREATOR, t.F_CREATE_TIME
  	</sql>

  	<sql id="where_sql">
		<if test="id != null and id != ''" > 
			and t.F_PID = #{id, jdbcType=VARCHAR}
		</if>
		<if test="title != null and title != ''" > 
			and T.F_TITLE = #{title, jdbcType=VARCHAR}
		</if>
		<if test="content != null and content != ''" > 
			and T.F_CONTENT = #{content, jdbcType=BLOB}
		</if>
		<if test="is_publish != null and is_publish != ''" > 
			and T.F_IS_PUBLISH = #{is_publish, jdbcType=CHAR}
		</if>
		<if test="publish_user_pid != null and publish_user_pid != ''" > 
			and T.F_PUBLISH_USER_PID = #{publish_user_pid, jdbcType=VARCHAR}
		</if>
		<if test="publish_time != null and publish_time != ''" > 
			and T.F_PUBLISH_TIME = #{publish_time, jdbcType=VARCHAR}
		</if>
		<if test="sysFlag != null and sysFlag != ''" > 
			and t.F_SYS_FLAG = #{sysFlag, jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''" > 
			and t.F_REMARK = #{remark, jdbcType=VARCHAR}
		</if>
		<if test="lastModifier != null and lastModifier != ''" > 
			and t.F_LAST_MODIFIER = #{lastModifier, jdbcType=VARCHAR}
		</if>
		<if test="lastModifiedTime != null and lastModifiedTime != ''" > 
			and t.F_LAST_MODIFIED_TIME = #{lastModifiedTime, jdbcType=VARCHAR}
		</if>
		<if test="creator != null and creator != ''" > 
			and t.F_CREATOR = #{creator, jdbcType=VARCHAR}
		</if>
		<if test="createTime != null and createTime != ''" > 
			and t.F_CREATE_TIME = #{createTime, jdbcType=VARCHAR}
		</if>
  	</sql>

	<!-- 新增 -->
  	<insert id="insert" parameterType="com.taro.entity.notice.NoticeEntity" >
    	INSERT INTO T_NOTICE (
    		F_PID, F_TITLE, F_CONTENT, F_IS_PUBLISH,
			F_PUBLISH_USER_PID, F_PUBLISH_TIME, 
		  	F_SYS_FLAG, F_REMARK, F_LAST_MODIFIER,
		  	F_LAST_MODIFIED_TIME, F_CREATOR, F_CREATE_TIME
    	) VALUES (
    		#{id, jdbcType=VARCHAR}, #{title, jdbcType=VARCHAR}, #{content, jdbcType=BLOB}, #{is_publish, jdbcType=CHAR},
			#{publish_user_pid, jdbcType=VARCHAR}, #{publish_time,jdbcType=VARCHAR} , 
		  	#{sysFlag, jdbcType=VARCHAR}, #{remark, jdbcType=VARCHAR}, #{lastModifier, jdbcType=VARCHAR},
		  	#{lastModifiedTime, jdbcType=VARCHAR}, #{creator, jdbcType=VARCHAR}, #{createTime, jdbcType=VARCHAR} 
    	)
  	</insert>

	<!-- 批量新增 -->
  	<insert id="insertObjects" parameterType="list">
		INSERT INTO T_NOTICE (
    		F_PID, F_TITLE, F_CONTENT, F_IS_PUBLISH,
			F_PUBLISH_USER_PID, F_PUBLISH_TIME, 
		  	F_SYS_FLAG, F_REMARK, F_LAST_MODIFIER,
		  	F_LAST_MODIFIED_TIME, F_CREATOR, F_CREATE_TIME
		)
		<foreach collection="list" item="entity" index="index" separator="union all">
			SELECT
    		#{entity.id, jdbcType=VARCHAR}, #{entity.title, jdbcType=VARCHAR}, #{entity.content, jdbcType=BLOB}, #{entity.is_publish, jdbcType=CHAR},
			#{entity.publish_user_pid, jdbcType=VARCHAR}, #{entity.publish_time,jdbcType=VARCHAR} , 
  			#{entity.sysFlag,jdbcType=VARCHAR}, #{entity.remark,jdbcType=VARCHAR}, #{entity.lastModifier,jdbcType=VARCHAR},
  			#{entity.lastModifiedTime,jdbcType=VARCHAR}, #{entity.creator,jdbcType=VARCHAR}, #{entity.createTime,jdbcType=VARCHAR} 
			FROM DUAL
		</foreach>
  	</insert>

	<!-- 更新 -->
  	<update id="update" parameterType="com.taro.entity.notice.NoticeEntity">
    	UPDATE T_NOTICE
	    <set>
      		<if test="id != null" > F_PID = #{id, jdbcType=VARCHAR}, </if>
      		<if test="title != null" > F_TITLE = #{title, jdbcType=VARCHAR}, </if>
      		<if test="content != null" > F_CONTENT = #{content, jdbcType=BLOB}, </if>
      		<if test="is_publish != null" > F_IS_PUBLISH = #{is_publish, jdbcType=CHAR}, </if>
      		<if test="publish_user_pid != null" > F_PUBLISH_USER_PID = #{publish_user_pid, jdbcType=VARCHAR}, </if>
      		<if test="publish_time != null" > F_PUBLISH_TIME = #{publish_time, jdbcType=VARCHAR}, </if>
	      	<if test="sysFlag != null" > F_SYS_FLAG = #{sysFlag, jdbcType=VARCHAR}, </if>
	      	<if test="remark != null" > F_REMARK = #{remark, jdbcType=VARCHAR}, </if>
	      	<if test="lastModifier != null" > F_LAST_MODIFIER = #{lastModifier, jdbcType=VARCHAR}, </if>
	      	<if test="lastModifiedTime != null" > F_LAST_MODIFIED_TIME = #{lastModifiedTime, jdbcType=VARCHAR}, </if>
	      	<if test="creator != null" > F_CREATOR = #{creator, jdbcType=VARCHAR}, </if>
	      	<if test="createTime != null" > F_CREATE_TIME = #{createTime, jdbcType=VARCHAR}, </if>
	    </set>
    	WHERE F_PID = #{id, jdbcType=VARCHAR}
  	</update>

	<!-- 批量更新 -->
  	<update id="batchUpdate" parameterType="java.util.List">
		<foreach collection="list" item="entity" separator=";">
			UPDATE T_NOTICE
			<set>
		      	<if test="id != null" > F_PID = #{entity.id, jdbcType=VARCHAR}, </if>
	      		<if test="title != null" > F_TITLE = #{entity.title, jdbcType=VARCHAR}, </if>
	      		<if test="content != null" > F_CONTENT = #{entity.content, jdbcType=BLOB}, </if>
	      		<if test="is_publish != null" > F_IS_PUBLISH = #{entity.is_publish, jdbcType=CHAR}, </if>
	      		<if test="publish_user_pid != null" > F_PUBLISH_USER_PID = #{entity.publish_user_pid, jdbcType=VARCHAR}, </if>
	      		<if test="publish_time != null" > F_PUBLISH_TIME = #{entity.publish_time, jdbcType=VARCHAR}, </if>
		      	<if test="sysFlag != null" > F_SYS_FLAG = #{entity.sysFlag, jdbcType=VARCHAR}, </if>
		      	<if test="remark != null" > F_REMARK = #{entity.remark, jdbcType=VARCHAR}, </if>
		      	<if test="lastModifier != null" > F_LAST_MODIFIER = #{entity.lastModifier, jdbcType=VARCHAR}, </if>
		      	<if test="lastModifiedTime != null" > F_LAST_MODIFIED_TIME = #{entity.lastModifiedTime, jdbcType=VARCHAR}, </if>
		      	<if test="creator != null" > F_CREATOR = #{entity.creator, jdbcType=VARCHAR}, </if>
		      	<if test="createTime != null" > F_CREATE_TIME = #{entity.createTime, jdbcType=VARCHAR}, </if>
			</set>
    		WHERE F_PID = #{id, jdbcType=VARCHAR}
		</foreach>
  	</update>

	<!-- 逻辑删除 -->
  	<update id="delete" parameterType="java.lang.String" >
    	UPDATE T_NOTICE SET
			F_SYS_FLAG = '0',
		    F_LAST_MODIFIER = #{lastModifier, jdbcType=VARCHAR},
			F_LAST_MODIFIED_TIME = #{lastModifiedTime, jdbcType=VARCHAR}
    	WHERE F_PID = #{id, jdbcType=VARCHAR}
  	</update>

	<!-- 逻辑删除所有 -->
  	<update id="deleteAll" parameterType="map">
		UPDATE T_NOTICE SET 
			F_SYS_FLAG = '0',
		    F_LAST_MODIFIER = #{lastModifier, jdbcType=VARCHAR},
			F_LAST_MODIFIED_TIME = #{lastModifiedTime, jdbcType=VARCHAR}
		WHERE F_PID IN
		<foreach item="item" collection="ids" open="(" separator="," close=")">
        	#{item}
    	</foreach>
  	</update>

	<!-- 查询条件 模糊查询用concat函数:name like concat(concat('%',#{bean.name,jdbcType=VARCHAR}),'%'),	这样做主要是为了支持mysql和oracle以及防止sql注入 -->
  	<!-- 列表查询 -->
  	<select id="list" resultMap="BaseResultMap" parameterType="map">
	    SELECT t.f_pid,
		t.f_title,
		t.F_IS_PUBLISH,
		t.F_PUBLISH_USER_PID,
		t.F_PUBLISH_TIME,
		u.F_NICKNAME AS F_PUBLISH_USER_NAME
		FROM T_NOTICE T
		left join t_sec_user u on t.F_PUBLISH_USER_PID = u.f_pid and u.F_SYS_FLAG = '1'
		where t.f_sys_flag = '1'
		<if test="id != null and id != ''" > 
			and t.F_PID = #{id, jdbcType=VARCHAR}
		</if>
		<if test="title != null and title != ''" > 
			and T.F_TITLE like concat(concat('%',#{title,jdbcType=VARCHAR}),'%')
		</if>
		<if test="content != null and content != ''" > 
			and T.F_CONTENT = #{content, jdbcType=BLOB}
		</if>
		<if test="is_publish != null and is_publish != ''" > 
			and T.F_IS_PUBLISH = #{is_publish, jdbcType=CHAR}
		</if>
		<if test="publish_user_pid != null and publish_user_pid != ''" > 
			and T.F_PUBLISH_USER_PID = #{publish_user_pid, jdbcType=VARCHAR}
		</if>
		<if test="publish_time != null and publish_time != ''" > 
			and T.F_PUBLISH_TIME = #{publish_time, jdbcType=VARCHAR}
		</if>
		<if test="sysFlag != null and sysFlag != ''" > 
			and t.F_SYS_FLAG = #{sysFlag, jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''" > 
			and t.F_REMARK = #{remark, jdbcType=VARCHAR}
		</if>
		<if test="lastModifier != null and lastModifier != ''" > 
			and t.F_LAST_MODIFIER = #{lastModifier, jdbcType=VARCHAR}
		</if>
		<if test="lastModifiedTime != null and lastModifiedTime != ''" > 
			and t.F_LAST_MODIFIED_TIME = #{lastModifiedTime, jdbcType=VARCHAR}
		</if>
		<if test="creator != null and creator != ''" > 
			and t.F_CREATOR = #{creator, jdbcType=VARCHAR}
		</if>
		<if test="createTime != null and createTime != ''" > 
			and t.F_CREATE_TIME = #{createTime, jdbcType=VARCHAR}
		</if>
		order by t.F_PUBLISH_TIME desc, t.F_CREATE_TIME desc
  	</select>

  	<select id="listHome" resultMap="BaseResultMap" parameterType="map">
  		select t.f_pid,
		t.f_title,
		t.F_IS_PUBLISH,
		t.F_PUBLISH_USER_PID,
		t.F_PUBLISH_TIME,
		u.F_NICKNAME AS F_PUBLISH_USER_NAME
		from t_notice t
		left join t_sec_user u on t.F_PUBLISH_USER_PID = u.f_pid and u.F_SYS_FLAG = '1'
     	<if test='tenants_pid != null and tenants_pid != "1001"'>
		left join t_notice_object o on t.F_PID = o.F_NOTICE_PID
		</if>
		where t.F_SYS_FLAG = '1' and t.F_IS_PUBLISH = '1'
     	<if test='tenants_pid != null and tenants_pid != "1001"'>
		and o.F_TENANTS_PID = #{tenants_pid,jdbcType=VARCHAR}
		</if>
		order by t.F_PUBLISH_TIME desc, t.F_CREATE_TIME desc
  	</select>

	<!-- 根据ID查询单条记录 -->
  	<select id="get" resultMap="BaseResultMap" parameterType="java.lang.String" >
    	SELECT 
    		<include refid="Base_Column_List" />
    	FROM T_NOTICE T
    	WHERE T.F_PID = #{id,jdbcType=VARCHAR}
  	</select>

</mapper>