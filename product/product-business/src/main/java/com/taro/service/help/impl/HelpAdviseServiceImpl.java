package com.taro.service.help.impl;import java.util.Date;import java.util.List;import java.util.Map;import org.apache.commons.lang3.StringUtils;import org.apache.commons.lang3.time.DateFormatUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import com.github.pagehelper.PageHelper;import com.taro.common.Page;import com.taro.constants.Constant;import com.taro.dao.help.HelpAdviseDao;import com.taro.entity.help.HelpAdviseEntity;import com.taro.exception.BusinessException;import com.taro.service.AbstractService;import com.taro.service.help.HelpAdviseService;import com.taro.utils.MyStringUtil;import com.taro.utils.SecurityMyUtils;/** *<p>Title:HelpAdviseServiceImpl.java</p> *<p>Description: ServiceImpl</p> *@author 张宇唯 *@version 1.0 *@Automatically generate by Coder in 2020-12-11 17:21:05 */@Servicepublic class HelpAdviseServiceImpl extends AbstractService<HelpAdviseEntity> implements HelpAdviseService {		@Autowired	private HelpAdviseDao helpAdviseDao;	    @Override    protected HelpAdviseDao getDao() {        return helpAdviseDao;    }    @Override    public Page<HelpAdviseEntity> listHelpAdvise(int pageNum, int pageSize, Map<String, Object> parameter) {        PageHelper.startPage(pageNum, pageSize, pageNum == 0 ? false : true);        List<HelpAdviseEntity> reuslt = getDao().listHelpAdvise(parameter);        Page<HelpAdviseEntity> page = new Page<HelpAdviseEntity>(reuslt);        return page;    }        @Override    public HelpAdviseEntity saveHelpAdvise (HelpAdviseEntity model) {    	if(null == model) {            throw new BusinessException("保存对象不能为空!");    	}        // 内容字段特殊处理，由于数据类型blob特殊性，如果是null值，会在查询时报错。        if(MyStringUtil.isBlank(model.getAdvise_content())){            model.setAdvise_content("");        }                // 内容字段特殊处理，由于数据类型blob特殊性，如果是null值，会在查询时报错。        if(MyStringUtil.isBlank(model.getReply_content())){            model.setReply_content("");        }                // 直接发布        if(MyStringUtil.isNotBlank(model.getIs_submit())        		&& Constant.YES.equals(model.getIs_submit())) {        	        	if(MyStringUtil.isBlank(model.getAdvise_title())) {                throw new BusinessException("消息标题不能为空!");        	}else if(MyStringUtil.isBlank(model.getAdvise_content())) {                throw new BusinessException("消息内容不能为空!");        	}        	model.setSubmit_user_pid(SecurityMyUtils.getUserId());        	model.setSubmit_time(DateFormatUtils.format(new Date(), Constant.DF_DATE_YYYYMMDDHHMMSS));        }        model.setIs_reply(Constant.NO);    	if(StringUtils.isBlank(model.getId())) {    		super.save(model);    	}else {    		super.update(model);    	}    	        return model;    }    @Override    public HelpAdviseEntity submit(String id) {        if (MyStringUtil.isBlank(id)) {            throw new BusinessException("传入对象id不能为空");        }        HelpAdviseEntity model = getDao().get(id);        if(null == model) {            throw new BusinessException("查询对象为空");        }        HelpAdviseEntity saveBean = new HelpAdviseEntity();        saveBean.setId(id);        saveBean.setIs_submit(Constant.YES);        saveBean.setSubmit_user_pid(SecurityMyUtils.getUserId());        saveBean.setSubmit_time(DateFormatUtils.format(new Date(), Constant.DF_DATE_YYYYMMDDHHMMSS));        saveBean.setIs_reply(Constant.NO);        super.update(saveBean);                return model;    }    @Override    public HelpAdviseEntity saveReply (HelpAdviseEntity model) {    	if(null == model) {            throw new BusinessException("保存对象不能为空!");    	}else if(MyStringUtil.isBlank(model.getId())) {            throw new BusinessException("对象id不能为空!");    	}else if(MyStringUtil.isBlank(model.getReply_content())) {            throw new BusinessException("回复内容不能为空!");    	}        // 内容字段特殊处理，由于数据类型blob特殊性，如果是null值，会在查询时报错。        if(MyStringUtil.isBlank(model.getAdvise_content())){            model.setAdvise_content("");        }                // 内容字段特殊处理，由于数据类型blob特殊性，如果是null值，会在查询时报错。        if(MyStringUtil.isBlank(model.getReply_content())){            model.setReply_content("");        }        HelpAdviseEntity saveBean = new HelpAdviseEntity();        saveBean.setId(model.getId());        saveBean.setIs_reply(Constant.YES);        saveBean.setReply_content(model.getReply_content());        super.update(saveBean);    	        return model;    }}