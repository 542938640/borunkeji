package com.taro.service.merchants.impl;import java.text.SimpleDateFormat;import java.util.Date;import java.util.List;import java.util.Map;import org.apache.commons.collections4.CollectionUtils;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.scheduling.annotation.Scheduled;import org.springframework.stereotype.Component;import com.google.common.collect.Maps;import com.taro.entity.merchants.MerchantsCouponEntity;import com.taro.service.merchants.MerchantsCouponService;import com.taro.utils.MyStringUtil;@Componentpublic class MerchantsTask {	private static final Logger LOG = Logger.getLogger(MerchantsTask.class);	@Autowired	private MerchantsCouponService merchantsCouponService;		// 每天零点执行	@Scheduled(cron = "0 0 0 * * ?")    public void execute() {		long start = System.currentTimeMillis();        LOG.info("MerchantsTask--->进入定时任务:商户优惠券");                Map<String, Object> queryMap = Maps.newHashMap();        queryMap.put("sysFlag", "1");        queryMap.put("status", "1");// 在运行        List<MerchantsCouponEntity> queryList = merchantsCouponService.list(queryMap);        if(CollectionUtils.isNotEmpty(queryList)) {        	Date endDate = null;        	SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyyMMdd");    		try {    			for(MerchantsCouponEntity coupon : queryList) {    				if(null != coupon && MyStringUtil.isNotBlank(coupon.getEnd_date())) {    					endDate = simpleDateFormat.parse(coupon.getEnd_date());    	        		if(endDate.getTime() < new Date().getTime()) {    	            		coupon.setStatus("2");// 已结束    	            		merchantsCouponService.update(coupon);    	        		}    				}    			}			} catch (Exception e) {		        LOG.info("MerchantsTask--->定时任务: 商户优惠券出现异常: " + e.getMessage());			}        }        LOG.info("MerchantsTask--->退出定时任务: 商户优惠券。方法执行时长: "+ (System.currentTimeMillis() - start) + "ms");    }	}